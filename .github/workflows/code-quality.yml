name: Code Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 8 * * 1'  # Run every Monday at 8 AM

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=src --cov-report=xml --cov-branch
        env:
          DATABASE_TYPE: postgresql
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: test_db
          SECRET_KEY: test-secret-key
          FIRST_SUPERUSER: admin@example.com
          FIRST_SUPERUSER_PASSWORD: admin123

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ github.repository_owner }}_fastapi-template
            -Dsonar.organization=${{ github.repository_owner }}
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=src
            -Dsonar.tests=tests
            -Dsonar.python.version=3.11
            -Dsonar.exclusions=src/migrations/**,src/alembic/**

  check-openapi:
    name: Validate OpenAPI Schema
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install openapi-spec-validator

      - name: Run API server temporarily
        run: |
          python -m pip install -r requirements/dev.txt
          python -m uvicorn src.main:app --host 0.0.0.0 --port 8000 &
          sleep 10  # Give the server time to start
        env:
          DATABASE_TYPE: postgresql
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_NAME: test_db
          SECRET_KEY: test-secret-key
          FIRST_SUPERUSER: admin@example.com
          FIRST_SUPERUSER_PASSWORD: admin123

      - name: Download OpenAPI schema
        run: |
          curl -s http://localhost:8000/api/v1/openapi.json > openapi.json

      - name: Validate OpenAPI schema
        run: |
          openapi-spec-validator openapi.json

      - name: Upload OpenAPI schema
        uses: actions/upload-artifact@v3
        with:
          name: openapi-schema
          path: openapi.json